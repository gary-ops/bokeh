name: GitHub-CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2-beta

      - name: Install Miniconda
        shell: bash
        run: |
          if [[ "${{ runner.os }}" = "Linux" ]]; then
            MINICONDA_FILENAME=Miniconda3-latest-Linux-x86_64.sh
          elif [[ "${{ runner.os }}" = "macOS" ]]; then
            MINICONDA_FILENAME=Miniconda3-latest-MacOSX-x86_64.sh
          elif [[ "${{ runner.os }}" = "Windows" ]]; then
            MINICONDA_FILENAME=Miniconda3-latest-Windows-x86_64.exe
          fi
          curl -L -o $MINICONDA_FILENAME "https://repo.anaconda.com/miniconda/$MINICONDA_FILENAME"
          bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3

      - name: Setup paths
        shell: bash
        run: |
          echo "::add-path::$HOME/miniconda3/bin"

      - name: Configure conda
        shell: bash
        env:
          CONDA_REQS: "conda=4.8.1 conda-build=3.18.10 conda-verify=3.4.2 ripgrep=0.10.0 jinja2"
        run: |
          conda config --set auto_update_conda off
          conda config --append channels bokeh
          conda config --get channels
          conda install --yes --quiet $CONDA_REQS

      - name: Install conda packages
        run: |
          BUILD_DEPS=`python scripts/deps.py build`
          conda install --yes --quiet $BUILD_DEPS

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('bokehjs/package-lock.json') }}

      - name: Install node modules
        run: |
          pushd bokehjs
          npm install -g npm
          npm ci --no-progress
          popd

      - name: Build BokehJS
        run: |
          pushd bokehjs
          node make build
          popd
          tar czf bokehjs-build.tgz "bokehjs/build"

      - name: Upload BokehJS
        uses: actions/upload-artifact@v1
        with:
          name: bokehjs-build
          path: bokehjs-build.tgz

      - name: Build conda package
        run: |
          conda build conda.recipe --quiet --no-test --no-anaconda-upload --no-verify
          pushd $HOME
          tar czf conda-bld-noarch.tgz "miniconda3/conda-bld/noarch"
          popd
          mv $HOME/conda-bld-noarch.tgz .

      - name: Upload conda package
        uses: actions/upload-artifact@v1
        with:
          name: conda-bld-noarch
          path: conda-bld-noarch.tgz






  js-test:
    needs: build
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2-beta

      - name: Install Miniconda
        shell: bash
        run: |
          if [[ "${{ runner.os }}" = "Linux" ]]; then
            MINICONDA_FILENAME=Miniconda3-latest-Linux-x86_64.sh
            curl -L -o $MINICONDA_FILENAME "https://repo.anaconda.com/miniconda/$MINICONDA_FILENAME"
            bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3
          elif [[ "${{ runner.os }}" = "macOS" ]]; then
            MINICONDA_FILENAME=Miniconda3-latest-MacOSX-x86_64.sh
            curl -L -o $MINICONDA_FILENAME "https://repo.anaconda.com/miniconda/$MINICONDA_FILENAME"
            bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3
          elif [[ "${{ runner.os }}" = "Windows" ]]; then
            MINICONDA_FILENAME=Miniconda3-latest-Windows-x86_64.exe
            curl -L -o $MINICONDA_FILENAME "https://repo.anaconda.com/miniconda/$MINICONDA_FILENAME"
            ./Miniconda3-latest-Windows-x86_64.exe //InstallationType=JustMe //RegisterPython=0 //S
          fi

      - name: Setup paths (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          echo "::add-path::$HOME\miniconda3"
          echo "::add-path::$HOME\miniconda3\DLLs"
          echo "::add-path::$HOME\miniconda3\Scripts"
          echo "::add-path::$HOME\miniconda3\Library\bin"
          echo "::add-path::$HOME\miniconda3\Library\usr\bin"
          echo "::add-path::$HOME\miniconda3\Library\mingw-w64\bin"

      - name: Setup paths (Linux or macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          echo "::add-path::$HOME/miniconda3/bin"

      - name: Configure conda
        shell: bash
        env:
          CONDA_REQS: "conda=4.8.1 jinja2 pyyaml"
        run: |
          conda config --set auto_update_conda off
          conda config --append channels bokeh
          conda config --append channels conda-forge
          conda config --get channels
          conda install --yes --quiet $CONDA_REQS

      - name: Download Bokehjs
        uses: actions/download-artifact@v1
        with:
          name: bokehjs-build

      - name: Download conda package
        uses: actions/download-artifact@v1
        with:
          name: conda-bld-noarch

      - name: Unpack artifacts
        shell: bash
        run: |
          mv conda-bld-noarch/conda-bld-noarch.tgz $HOME
          pushd $HOME
          tar xzf conda-bld-noarch.tgz
          popd
          tar xvzf bokehjs-build/bokehjs-build.tgz

      - name: Install conda packages
        shell: bash
        run: |
          conda install --yes --quiet --use-local python=${{ matrix.python-version }} bokeh "nodejs=12.*"

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('bokehjs/package-lock.json') }}

      - name: Install node modules
        run: |
          pushd bokehjs
          npm install -g npm
          npm ci --no-progress
          popd
          python setup.py --install-js

      - name: Run tests
        shell: bash
        working-directory: ./bokehjs
        run: |
          node make test --screenshot=save

      - name: Collect results
        if: always()
        shell: bash
        run: |
          OS=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')
          SRC="bokehjs/test/baselines/${OS}"
          DST="integration-report/${SRC}"
          mkdir -p ${DST}
          if [[ -e ${SRC}/report.json ]];
          then
            CHANGED=$(git status --short ${SRC}/baselines/*.png | cut -c4-)
            cp ${SRC}/report.json ${CHANGED} ${DST}
          fi

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: integration-report
          path: integration-report
